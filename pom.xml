<?xml version="1.0" encoding="UTF-8"?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2008-present Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.buildsupport</groupId>
    <artifactId>public-parent</artifactId>
    <version>51</version>
    <relativePath/>
  </parent>

  <groupId>org.sonatype.nexus</groupId>
  <artifactId>nexus-parent</artifactId>
  <name>${project.groupId}:${project.artifactId}</name>
  <packaging>pom</packaging>

  <version>3.77.0-08</version>

  <inceptionYear>2008</inceptionYear>
  <url>http://nexus.sonatype.org/</url>

  <licenses>
    <license>
      <name>Eclipse Public License</name>
      <url>http://www.eclipse.org/legal/epl-v10.html</url>
    </license>
  </licenses>

  <issueManagement>
    <system>Jira</system>
    <url>http://issues.sonatype.org/browse/NEXUS</url>
  </issueManagement>

  <scm>
    <connection>scm:git:git://github.com/sonatype/nexus-public.git</connection>
    <developerConnection>scm:git:git@github.com:sonatype/nexus-public.git</developerConnection>
    <url>https://github.com/sonatype/nexus-public</url>
  </scm>

  <prerequisites>
    <!-- Mostly meaningless, though site plugin uses this; Minimum version controlled by enforcer plugin -->
    <maven>3.9.6</maven>
  </prerequisites>

  <properties>
    <!--
    Define nexus versions.  The 'nexus.version' property always refers to the version of the current project.
    These values must always be constants; 'nexus.version' will get update automatically by set-version.
    -->
    <nexus.version>3.77.0-08</nexus.version>
    <nexus2.version>2.15.1-02</nexus2.version>

    <karaf.version>4.3.9</karaf.version>

    <!-- Define the node and yarn versions used by the frontend-maven-plugin -->
    <node.version>v18.17.1</node.version>
    <yarn.version>v1.22.19</yarn.version>
    <npm.install>install --immutable</npm.install>
    <npm.skipTests>false</npm.skipTests>
    <npm.build>build-all</npm.build>

    <!-- logging configuration used in logback config files to control test logging -->
    <test.log.level>INFO</test.log.level>
    <it.test.log.level>INFO</it.test.log.level>

    <!--
    Default compile support for Java17+
    -->
    <maven.compiler.release>17</maven.compiler.release>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>

    <!--
    Sonar configuration.
    -->
    <sonar.branch>3.0</sonar.branch>

    <!--
    Default optimization settings for optimized "prod" aggregate sources.
    -->
    <extjs.omit>true</extjs.omit>
    <extjs.omit.debug>true</extjs.omit.debug>
    <extjs.omit.assert>true</extjs.omit.assert>
    <maven.yuicompressor.nomunge>false</maven.yuicompressor.nomunge>
    <maven.yuicompressor.nominify>false</maven.yuicompressor.nominify>
    <maven.yuicompressor.disableOptimizations>false</maven.yuicompressor.disableOptimizations>
    <maven.yuicompressor.linebreakpos>-1</maven.yuicompressor.linebreakpos>

    <!-- including installers in the process significantly increases time required for staging -->
    <staging.progressTimeout>60</staging.progressTimeout>

    <it.includes>**/*IT.*</it.includes>

    <it.includedGroups></it.includedGroups>
    <it.excludedGroups>
      org.sonatype.goodies.testsupport.group.Perf,
      org.sonatype.goodies.testsupport.group.External,
      org.sonatype.goodies.testsupport.group.Unstable,
      org.sonatype.nexus.content.testsuite.groups.PostgresTestGroup
    </it.excludedGroups>

    <test.argLine>
      --add-exports=java.base/sun.nio.ch=ALL-UNNAMED
      --add-opens=java.base/java.net=ALL-UNNAMED
      --add-opens=java.base/java.util=ALL-UNNAMED
      --add-exports=java.base/sun.security.x509=ALL-UNNAMED
      --add-exports=java.base/sun.security.rsa=ALL-UNNAMED
      --add-exports=java.base/sun.security.pkcs=ALL-UNNAMED
    </test.argLine>

    <clm.skip>false</clm.skip>

    <!-- fabric8 container naming pattern: {imageName}-{buildTimestamp}-{index} -->
    <docker.containerNamePattern>%n-%t-%i</docker.containerNamePattern>

    <!-- max heap memory for surefire-plugin -->
    <surefire.maxHeap>-Xmx300M</surefire.maxHeap>
  </properties>

  <modules>
    <!--
    Include buildsupport first, order seems chaotic otherwise
    -->
    <module>buildsupport</module>

    <module>assemblies</module>
    <module>components</module>
    <module>plugins</module>
  </modules>

  <dependencyManagement>
    <dependencies>

      <!-- components -->

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-audit</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-base</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-blobstore</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-blobstore-api</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-blobstore-file</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-bootstrap</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-capability</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-cleanup</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-cleanup-config</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-commands</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-common</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-core</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-crypto</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-datastore</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-datastore-api</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-datastore-mybatis</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-datastore-mybatis</artifactId>
        <version>3.77.0-08</version>
        <classifier>features</classifier>
        <type>xml</type>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-distributed-event-service-api</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-cache</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-elasticsearch</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-email</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-extdirect</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-extender</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-features</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-httpclient</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-jmx</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-scheduling</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-formfields</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-guice-servlet</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-main</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-mime</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-open-core-edition</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-open-core-edition</artifactId>
        <version>3.77.0-08</version>
        <classifier>features</classifier>
        <type>xml</type>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-pax-logging</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-plugin-api</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-quartz</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-rapture</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-rapture</artifactId>
        <version>3.77.0-08</version>
        <classifier>sources</classifier>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-repository-config</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-repository-content</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-repository-services</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-repository-view</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-rest</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-rest-client</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-rest-jackson2</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-script</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-security</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-selector</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-servlet</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-siesta</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-ssl</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-supportzip-api</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-swagger</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-task-logging</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-thread</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-transaction</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-ui-plugin</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-upgrade</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-validation</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-webhooks</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-webresources-api</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <!-- testsupport -->

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-pax-exam</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-test-common</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-test-db</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus</groupId>
        <artifactId>nexus-testsupport</artifactId>
        <version>3.77.0-08</version>
      </dependency>

      <!-- assemblies -->

      <dependency>
        <groupId>org.sonatype.nexus.assemblies</groupId>
        <artifactId>nexus-startup-feature</artifactId>
        <version>3.77.0-08</version>
        <classifier>features</classifier>
        <type>xml</type>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus.assemblies</groupId>
        <artifactId>nexus-boot-feature</artifactId>
        <version>3.77.0-08</version>
        <classifier>features</classifier>
        <type>xml</type>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus.assemblies</groupId>
        <artifactId>nexus-base-feature</artifactId>
        <version>3.77.0-08</version>
        <classifier>features</classifier>
        <type>xml</type>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus.assemblies</groupId>
        <artifactId>nexus-core-feature</artifactId>
        <version>3.77.0-08</version>
        <classifier>features</classifier>
        <type>xml</type>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus.assemblies</groupId>
        <artifactId>nexus-base-overlay</artifactId>
        <version>3.77.0-08</version>
        <type>zip</type>
      </dependency>

      <dependency>
        <groupId>org.sonatype.nexus.assemblies</groupId>
        <artifactId>nexus-base-template</artifactId>
        <version>3.77.0-08</version>
        <type>zip</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.extensions</groupId>
        <artifactId>maven-build-cache-extension</artifactId>
        <version>1.2.0</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.6.3</version>
          <configuration>
            <doclint>none</doclint>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <configuration>
            <allowIncompleteProjects>true</allowIncompleteProjects>
          </configuration>
        </plugin>

        <!--
        Additional configuration for release; enable additional profiles.
        -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <configuration>
            <releaseProfiles>release,optimize</releaseProfiles>
          </configuration>
        </plugin>

        <!--
        For maven-plugins which still need Plexus descriptors.
        -->
        <plugin>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-component-metadata</artifactId>
          <version>1.6</version>
          <executions>
            <execution>
              <goals>
                <goal>generate-metadata</goal>
                <goal>generate-test-metadata</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>1.5</version>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy-ant</artifactId>
              <version>3.0.19</version>
            </dependency>
          </dependencies>
          <configuration>
            <!--
            Workaround https://github.com/groovy/GMavenPlus/issues/56
            -->
            <allowSystemExits>true</allowSystemExits>
          </configuration>
        </plugin>

        <!--
        Generate sisu index metadata.
        -->
        <plugin>
          <groupId>org.eclipse.sisu</groupId>
          <artifactId>sisu-maven-plugin</artifactId>
          <version>0.9.0.M3</version>
          <executions>
            <execution>
              <goals>
                <goal>main-index</goal>
                <goal>test-index</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!--
        Generate basic OSGi metadata.
        -->
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>5.1.6</version>
          <extensions>true</extensions>
          <configuration>
            <instructions>
              <!-- relax range to account for guava versioning -->
              <_consumer-policy>$(version;==)</_consumer-policy>
              <!-- include all content in the output directory -->
              <Include-Resource>
                /=${project.build.outputDirectory},{maven-resources}
              </Include-Resource>
              <!-- clear default to avoid spurious !* warnings -->
              <Private-Package/>
              <!-- record feature-flagged classes/package-info's -->
              <Feature-Flagged>
                $(classes;ANNOTATED;org.sonatype.nexus.common.app.FeatureFlag)
              </Feature-Flagged>
              <!-- extra imports needed to extend and then proxy certain types across modules -->
              <Import-Package>
                $(if;$(classes;EXTENDS;*.FacetSupport);org.sonatype.nexus.repository.config),
                $(if;$(classes;EXTENDS;*.(Blob|Data)StoreSupport);org.sonatype.nexus.transaction),
                $(if;$(classes;EXTENDS;*.ContentFacetSupport);org.sonatype.nexus.repository.content,org.sonatype.nexus.transaction),
                $(if;$(classes;IMPLEMENTS;*.ContentRepositoryDAO);org.sonatype.nexus.common.entity),
                $(if;$(classes;IMPLEMENTS;*.AssetBlobDAO);org.sonatype.nexus.blobstore.api),
                *
              </Import-Package>
              <!-- match previous plugin behaviour: turn off scanning for Class.forName usage -->
              <_noclassforname>true</_noclassforname>
            </instructions>
          </configuration>
        </plugin>

        <!--
        Generate Karaf feature XML.
        -->
        <plugin>
          <groupId>org.apache.karaf.tooling</groupId>
          <artifactId>karaf-maven-plugin</artifactId>
          <version>${karaf.version}</version>
          <extensions>true</extensions>
          <configuration>
            <excludedArtifactIds>
              <!--
              Covered by platform/other bundles
              -->
              <id>org.osgi.core</id>
              <id>org.osgi.compendium</id>
              <id>osgi.core</id>
              <id>osgi.cmpn</id>
              <id>org.eclipse.osgi</id>
              <id>activation</id>
              <id>javax.annotation</id>
              <id>javax.annotation-api</id>
              <id>jboss-annotations-api_1.1_spec</id>
              <id>jboss-annotations-api_1.2_spec</id>
              <id>jboss-annotations-api_1.3_spec</id>
              <id>javax.inject</id>
              <id>aopalliance</id>
              <id>javax.ws.rs</id>
              <id>javax.ws.rs-api</id>
              <id>jakarta.xml.bind-api</id>
              <id>jaxb-runtime</id>
              <id>txw2</id>
              <id>istack-commons-runtime</id>
              <id>jsr250-api</id>
              <id>jsr305</id>
              <id>slf4j-api</id>
              <id>jul-to-slf4j</id>
              <id>jcl-over-slf4j</id>
              <id>log4j-over-slf4j</id>
              <id>logback-core</id>
              <id>logback-classic</id>
              <id>jboss-logging</id>
              <id>bcprov-jdk15to18</id>
              <id>bcpkix-jdk15to18</id>
              <id>bcpg-jdk15to18</id>
              <id>bcutil-jdk15to18</id>
              <id>directjngine</id>
              <id>validation-api</id>
              <!--
              Need special wrapping/fragments
              -->
              <id>jakarta.el</id>
              <id>jakarta.validation-api</id>
              <id>jetty-util</id>
              <id>paranamer</id>
              <id>httpcore</id>
              <id>httpclient</id>
              <id>shiro-guice</id>
              <id>metrics-guice</id>
              <id>simpleclient_dropwizard</id>
              <id>quartz</id>
              <id>resteasy-jaxrs</id>
              <id>resteasy-atom-provider</id>
              <id>resteasy-jackson2-provider</id>
              <id>resteasy-jaxb-provider</id>
              <id>resteasy-multipart-provider</id>
              <id>resteasy-validator-provider</id>
              <id>resteasy-client</id>
              <id>jackson-coreutils</id>
              <id>json-patch</id>
              <id>jsoup</id>
              <id>swagger-core</id>
              <id>swagger-jaxrs</id>
            </excludedArtifactIds>
          </configuration>
        </plugin>

        <!--
        Generate Pax-Exam test-dependency XML.
        -->
        <plugin>
          <groupId>org.apache.servicemix.tooling</groupId>
          <artifactId>depends-maven-plugin</artifactId>
          <version>1.5.0</version>
          <executions>
            <execution>
              <id>generate-depends-file</id>
              <goals>
                <goal>generate-depends-file</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.sonatype.nexus.buildsupport</groupId>
          <artifactId>extjs-maven-plugin</artifactId>
          <version>3.77.0-08</version>
          <executions>
            <execution>
              <goals>
                <goal>aggregate-js</goal>
              </goals>
              <configuration>
                <sourceDirectory>${project.basedir}/src/main/resources/static/rapture</sourceDirectory>
                <outputFile>${project.build.outputDirectory}/static/rapture/${project.artifactId}-debug.js</outputFile>
                <omitFlags>
                  <debug>${extjs.omit.debug}</debug>
                  <assert>${extjs.omit.assert}</assert>
                </omitFlags>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.sonatype.plugins</groupId>
          <artifactId>yuicompressor-maven-plugin</artifactId>
          <version>1.1.0</version>
          <configuration>
            <jswarn>false</jswarn>
          </configuration>
          <executions>
            <execution>
              <id>plugin-js</id>
              <goals>
                <goal>aggregate-js</goal>
              </goals>
              <configuration>
                <output>${project.build.outputDirectory}/static/rapture/${project.artifactId}-prod.js</output>
                <sourceDirectory>${project.build.outputDirectory}/static/rapture</sourceDirectory>
                <includes>
                  <include>${project.artifactId}-debug.js</include>
                </includes>
              </configuration>
            </execution>
            <execution>
              <id>plugin-css</id>
              <goals>
                <goal>aggregate-css</goal>
              </goals>
              <configuration>
                <output>${project.build.outputDirectory}/static/rapture/resources/${project.artifactId}-prod.css</output>
                <sourceDirectory>${project.basedir}/src/main/resources/static/rapture/resources</sourceDirectory>
                <includes>
                  <include>${project.artifactId}-debug.css</include>
                </includes>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>1.11.3</version>

          <configuration>
            <nodeVersion>${node.version}</nodeVersion>
            <yarnVersion>${yarn.version}</yarnVersion>
            <workingDirectory>${project.basedir}</workingDirectory>
            <installDirectory>${project.build.directory}</installDirectory>
            <environmentVariables>
              <JEST_SUITE_NAME>React-Tests</JEST_SUITE_NAME>
              <CI>true</CI>
            </environmentVariables>
          </configuration>

          <executions>
            <execution>
              <id>install node and yarn</id>
              <goals>
                <goal>install-node-and-yarn</goal>
              </goals>
              <phase>generate-resources</phase>
            </execution>
            <execution>
              <id>yarn cache clean</id>
              <goals>
                <goal>yarn</goal>
              </goals>
              <phase>generate-resources</phase>
              <configuration>
                <arguments>cache clean</arguments>
              </configuration>
            </execution>
            <execution>
              <id>yarn install</id>
              <goals>
                <goal>yarn</goal>
              </goals>
              <phase>generate-resources</phase>
              <configuration>
                <arguments>${npm.install}</arguments>
              </configuration>
            </execution>
            <execution>
              <id>yarn run build</id>
              <goals>
                <goal>yarn</goal>
              </goals>
              <phase>compile</phase>
              <configuration>
                <arguments>${npm.build}</arguments>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <configuration>
            <encoding>UTF-8</encoding>
            <strictCheck>true</strictCheck>
            <useDefaultExcludes>true</useDefaultExcludes>
            <licenseSets>
              <!-- License Set for Public Codebase -->
              <!-- This set applies the standard Sonatype header (header.txt) for the OSS code. -->
              <licenseSet>
                <header>header.txt</header>
                <excludes>
                  <exclude>**/sonatype-config/**</exclude>
                  <!--
                  Exclude zion configuration.
                  -->
                  <exclude>.zion/**</exclude>
                  <exclude>variables.properties</exclude>
                  <!--
                  Exclude top-level helper scripts.
                  -->
                  <exclude>*.sh</exclude>
                  <exclude>*.cmd</exclude>
                  <!--
                  Exclude markdown documentation files
                  -->
                  <exclude>**/*.md</exclude>
                  <!--
                  Exclude maven-wrapper configuration.
                  -->
                  <exclude>.mvn/**</exclude>
                  <!--
                  Exclude optional private bits.
                  -->
                  <exclude>private/**</exclude>
                  <!--
                  Exclude assembly overlay files
                  -->
                  <exclude>**/src/main/resources/overlay/**</exclude>
                  <!--
                  Exclude (most) test resource files, many of these need specific content w/o headers.
                  -->
                  <exclude>**/src/test/resources/**</exclude>
                  <exclude>**/src/test/filtered-resources/**</exclude>
                  <exclude>**/src/test/it-resources/**</exclude>
                  <!--
                  Exclude XML stylesheet template so header doesn't alter expected output
                  -->
                  <exclude>**/nexus/internal/atlas/customizers/jetty-stylesheet.xml</exclude>
                  <exclude>**/nexus/internal/atlas/customizers/hazelcast-stylesheet.xml</exclude>
                  <!--
                  Exclude rapture configuration, generated and thirdparty resources.
                  -->
                  <exclude>**/src/main/baseapp/**</exclude>
                  <exclude>**/src/main/resources/static/rapture/baseapp-*.js</exclude>
                  <exclude>**/src/main/resources/static/rapture/resources/baseapp-*.css</exclude>
                  <exclude>**/src/main/resources-filtered/static/rapture/resources/baseapp-*.css</exclude>
                  <exclude>**/src/main/resources/static/rapture/Ext/ux/**</exclude>
                  <exclude>**/src/main/resources/static/rapture/Ext/patch/**</exclude>
                  <!--
                  Exclude npm dependencies
                  -->
                  <exclude>**/node_modules/**</exclude>
                  <!--
                  Exclude files generated by javascript builds
                  -->
                  <exclude>**/nexus-ui-plugin/dist/**</exclude>
                  <!--
                  Excludes for specific classes which have compatible, yet different licences.
                  -->
                  <exclude>**/nexus-extdirect/**/com/softwarementors/**</exclude>
                  <exclude>**/nexus-ssl/**/org/sonatype/nexus/ssl/keystore/internal/geronimo/**</exclude>
                  <exclude>**/org/sonatype/nexus/repository/apt/internal/org/apache/commons/compress/archivers/ar/ArArchiveInputStream.java</exclude>

                  <!--
                  JS files will include the extjs specific header, see header-extjs profile below
                  -->
                  <exclude>**/*.js</exclude>
                  <exclude>**/dependency-reduced-pom.xml</exclude>
                </excludes>
              </licenseSet>

              <!-- License Set for ExtJS JavaScript Files -->
              <!-- This set applies the ExtJS-specific license header (header-extjs.txt) to JavaScript files. -->
              <licenseSet>
                <header>header-extjs.txt</header>
                <includes>
                  <include>**/*.js</include>
                </includes>
                <excludes>
                  <exclude>private/**</exclude>
                  <!--
                  Exclude assembly overlay files
                  -->
                  <exclude>assemblies/**/src/main/resources/overlay/**</exclude>
                  <!--
                  Exclude (most) test resource files, many of these need specific content w/o headers.
                  -->
                  <exclude>**/src/test/resources/**</exclude>
                  <exclude>**/src/test/filtered-resources/**</exclude>
                  <exclude>**/src/test/it-resources/**</exclude>
                  <!--
                  Exclude rapture configuration, generated and thirdparty resources.
                  -->
                  <exclude>**/src/main/baseapp/**</exclude>
                  <exclude>**/src/main/resources/static/rapture/baseapp-*.js</exclude>
                  <exclude>**/src/main/resources/static/rapture/resources/baseapp-*.css</exclude>
                  <exclude>**/src/main/resources-filtered/static/rapture/resources/baseapp-*.css</exclude>
                  <exclude>**/src/main/resources/static/rapture/Ext/ux/**</exclude>
                  <exclude>**/src/main/resources/static/rapture/Ext/patch/**</exclude>
                  <!--
                  Exclude npm dependencies
                  -->
                  <exclude>**/node_modules/**</exclude>
                  <!--
                  Exclude files generated by javascript builds
                  -->
                  <exclude>**/nexus-ui-plugin/dist/**</exclude>
                  <exclude>**/dependency-reduced-pom.xml</exclude>
                </excludes>
              </licenseSet>

              <!-- License Set for Private (Pro) Codebase -->
              <!-- This set applies the private-specific license header (private/header.txt) to files part of the pro codebase. -->
              <licenseSet>
                <header>private/header.txt</header>
                <includes>
                  <include>private/**/*.java</include>
                  <include>private/**/*.xml</include>
                  <include>private/**/*.js</include>
                  <include>private/**/*.groovy</include>
                </includes>
                <excludes>
                  <exclude>.zion/**</exclude>
                  <exclude>variables.properties</exclude>
                  <!--
                  Exclude markdown documentation files
                  -->
                  <exclude>**/*.md</exclude>
                  <!--
                  Exclude assembly overlay files
                  -->
                  <exclude>assemblies/**/src/main/resources/overlay/**</exclude>
                  <!--
                  Exclude (most) test resource files, many of these need specific content w/o headers.
                  -->
                  <exclude>**/src/test/resources/**</exclude>
                  <exclude>**/src/test/filtered-resources/**</exclude>
                  <exclude>**/src/test/it-resources/**</exclude>
                  <!--
                  Exclude npm dependencies
                  -->
                  <exclude>**/node_modules/**</exclude>
                  <!--
                  Exclude third-party resources.
                  -->
                  <exclude>**/nexus-clm-plugin/src/main/resources/artifact-details-template/jquery*</exclude>
                  <exclude>**/nexus-proximanova-plugin/src/main/resources/static/rapture/resources/fonts/**</exclude>
                  <!--
                  Exclude OSS codebase overlays.
                  -->
                  <exclude>**/nexus-public-sources/src/main/resources/overlay/**</exclude>
                  <!--
                  Exclude licenses and related templates
                  -->
                  <exclude>**/nexus-licenses/src/main/licenses/**</exclude>
                  <!--
                  Exclude functional-testsuite overlay resources
                  -->
                  <exclude>**/functional-testsuite/src/test/ft-resources/testsuite-lib/siesta/**</exclude>
                  <!--
                  Exclude testsuite data resources
                  -->
                  <exclude>**/nexus-testsuite-data/src/main/resources/**</exclude>
                  <!--
                  Exclude stress testsuite scripts
                  -->
                  <exclude>**/nexus-stress-testsuite/scripts/**</exclude>
                  <!--
                  Exclude installer resources
                  -->
                  <exclude>**/nexus-installer/src/main/installer/**</exclude>
                  <exclude>**/nexus-installer/*.sh</exclude>
                  <!--
                  Exclude selenide forked classes
                  -->
                  <exclude>**/selenide-functional-tests/src/test/java/com/sonatype/nexus/com/codeborne/selenide/**</exclude>
                  <!--
                  Excludes for specific classes which have compatible, yet different licenses.
                  -->
                  <exclude>**/nexus-ldap-plugin/**/org/sonatype/nexus/ldap/internal/connector/dao/LdapEncoder.java</exclude>
                  <exclude>**/dependency-reduced-pom.xml</exclude>
                  <!--
                  Exclude files generated by swagger codegen
                  -->
                  <exclude>**/io/swagger/client/**</exclude>
                </excludes>
              </licenseSet>
            </licenseSets>
          </configuration>
        </plugin>

        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.43.4</version>
        </plugin>

        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>

        <plugin>
          <!-- see developer-documentation/development/formatting.md -->
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>2.43.0</version>

          <configuration>
            <ratchetFrom>origin/main</ratchetFrom>

            <formats>
              <format>
                <includes>
                  <include>*.java</include>
                </includes>
                <excludes>
                  <exclude>target/generated-sources/**/*.java</exclude>
                </excludes>
                <trimTrailingWhitespace/>
                <endWithNewline/>
              </format>
            </formats>
            <java>
              <removeUnusedImports/>

              <eclipse>
                <file>${session.executionRootDirectory}/sonatype-config/sonatype-eclipse.xml</file>
              </eclipse>
            </java>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <!-- Overridden due to parent pom defining a version which does not support java 17 -->
          <version>3.15.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <useSystemClassLoader>false</useSystemClassLoader>
            <forkCount>1</forkCount>
            <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>
            <reuseForks>true</reuseForks>
            <argLine>
              ${test.argLine}
              ${surefire.maxHeap}
              -XX:MaxDirectMemorySize=2G
              -XX:+HeapDumpOnOutOfMemoryError
              -XX:HeapDumpPath=${project.build.directory}/surefire-reports
            </argLine>
            <excludes>
              <exclude>**/Abstract*</exclude>
              <exclude>**/*$*</exclude>
              <exclude>**/*Tests</exclude>
            </excludes>
            <groups>${it.includedGroups}</groups>
            <excludedGroups>${it.excludedGroups}</excludedGroups>
          </configuration>
        </plugin>

        <!--
        Basic integration-test environment configuration.
        -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <configuration>
            <trimStackTrace>false</trimStackTrace>
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
            <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>
            <argLine>
              ${test.argLine}
              -Xmx400M
              -XX:MaxDirectMemorySize=2G
              -XX:+HeapDumpOnOutOfMemoryError
              -XX:HeapDumpPath=${project.build.directory}/failsafe-reports
            </argLine>
            <excludes>
              <exclude>**/Abstract*</exclude>
              <exclude>**/*$*</exclude>
            </excludes>
            <includes>
              <include>${it.includes}</include>
            </includes>
            <groups>${it.includedGroups}</groups>
            <excludedGroups>${it.excludedGroups}</excludedGroups>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-environment</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <fail>true</fail>
              <rules>
                <!--
                Require Maven 3.9.6+ for java17 support
                -->
                <requireMavenVersion>
                  <version>[3.9.6,)</version>
                </requireMavenVersion>

                <!--
                Require Java 17+
                -->
                <requireJavaVersion>
                  <version>[17,)</version>
                </requireJavaVersion>

                <!--
                Resolving these issues after the fact is VERY tedious
                -->
                <banDuplicatePomDependencyVersions/>
              </rules>
            </configuration>
          </execution>

          <execution>
            <id>enforce-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <fail>true</fail>
              <rules>
                <bannedDependencies>
                  <searchTransitive>true</searchTransitive>
                  <excludes>
                    <!--
                    Velocity 1.4 is banned, org.apache.velocity:velocity should be used instead.
                    -->
                    <exclude>velocity:velocity</exclude>
                    <exclude>velocity:velocity-dep</exclude>

                    <!--
                    SISU Velocity is banned
                    -->
                    <exclude>org.sonatype.sisu:sisu-velocity</exclude>

                    <!--
                    Merged into guice core
                    -->
                    <exclude>com.google.inject.extensions:guice-multibindings:*</exclude>

                    <!--
                    Conflicts with slf4j.
                    -->
                    <exclude>commons-logging:*</exclude>

                    <!--
                    Security hazard: osvdb-58760
                    -->
                    <exclude>commons-vfs:commons-vfs</exclude>

                    <!--
                    Ban beanutils pre-1.9 which includes embedded commons-collections.
                    -->
                    <exclude>commons-beanutils:commons-beanutils:(,1.9]</exclude>
                    <!--
                    Ban older commons-beanutils-core use 1.9 simple module instead.
                    -->
                    <exclude>commons-beanutils:commons-beanutils-core</exclude>

                    <!--
                    Security hazard: osvdb-68314
                    -->
                    <exclude>xmlrpc:*</exclude>

                    <!--
                    Require use of sisu plexus integration.
                    -->
                    <exclude>*:plexus-container-default</exclude>
                    <exclude>*:plexus-component-api</exclude>

                    <!--
                    Ban old versions of apache shiro.
                    -->
                    <exclude>*:jsecurity</exclude>

                    <!--
                    Ban old aether so we can require compatible version (see includes).
                    -->
                    <exclude>org.sonatype.aether:*:1.8</exclude>

                    <!--
                    Ban apis which are part of Java 6.
                    -->
                    <!--<exclude>*:activation</exclude>-->
                    <!--<exclude>*:stax-api</exclude>-->
                    <!--<exclude>*:jaxb-api</exclude>-->
                    <!--<exclude>*:xml-apis</exclude>-->

                    <!--
                    Ban junit which includes old, or improper hamcrest.
                    -->
                    <exclude>junit:junit:(,4.10]</exclude>
                    <exclude>junit:junit-dep</exclude>

                    <!--
                    Ban old servlet apis.
                    -->
                    <exclude>javax.servlet:servlet-api</exclude>
                    <exclude>org.mortbay.jetty:servlet-api</exclude>
                    <exclude>org.mortbay.jetty:servlet-api-2.5</exclude>

                    <!--
                    Ban uber mockito.
                    -->
                    <exclude>org.mockito:mockito-all</exclude>

                    <!--
                    Ban hamcrest so we can require compatible version (see includes).
                    -->
                    <exclude>org.hamcrest:*</exclude>

                    <!--
                    Ban uber hamcrest.
                    -->
                    <exclude>org.hamcrest:hamcrest-all:*</exclude>

                    <!--
                    Ban old plexus components.
                    -->
                    <exclude>org.sonatype.spice:plexus-ehcache</exclude>

                    <!--
                    Ban old litmus.
                    -->
                    <exclude>org.sonatype.sisu.litmus:litmus-testsupport:(,1.3]</exclude>

                    <!--
                    Ban log4j.
                    -->
                    <exclude>log4j:*</exclude>

                    <!--
                    CVE-2021-44228
                    -->
                    <exclude>org.apache.logging.log4j:log4j-core:(,2.15.0)</exclude>
                    <exclude>ch.qos.logback:logback-classic:(,1.2.9)</exclude>

                    <!--
                    Ban old bouncycastle.
                    -->
                    <exclude>org.bouncycastle:*-jdk14:*</exclude>
                    <exclude>org.bouncycastle:*-jdk15:*</exclude>
                    <exclude>bouncycastle:*-jdk14:*</exclude>
                    <exclude>bouncycastle:*-jdk15:*</exclude>

                    <!--
                    Ban snappy-java as there are lingering issues on OSGi when restarting.
                    -->
                    <exclude>org.xerial.snappy:snappy-java:*</exclude>

                    <!--
                    Ban old javax.mail
                    -->
                    <exclude>javax.mail:mail:*</exclude>

                    <!--
                    Ban old jaxb
                    -->
                    <exclude>javax.xml.bind:jaxb-api:*</exclude>
                    <exclude>com.sun.xml.bind:jaxb-core:*</exclude>
                    <exclude>com.sun.xml.bind:jaxb-impl:*</exclude>
                  </excludes>

                  <!--
                  Exceptions to excludes.
                  -->
                  <includes>
                    <!--
                    Allow aether 1.8.1+
                    -->
                    <include>org.sonatype.aether:*:1.8.1</include>

                    <!--
                    Allow hamcrest 1.3
                    -->
                    <include>org.hamcrest:*:1.3</include>
                  </includes>
                </bannedDependencies>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>build-identity</id>
            <phase>initialize</phase>
            <goals>
              <goal>create</goal>
            </goals>
            <configuration>
              <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
              <buildNumberPropertyName>build.revision</buildNumberPropertyName>
              <scmBranchPropertyName>build.branch</scmBranchPropertyName>

              <!-- separate from build.timestamp, which uses a less precise format defined in buildsupport parent -->
              <timestampPropertyName>build.when</timestampPropertyName>
              <timestampFormat>{0,date,yyyy-MM-dd-HHmm-ssS}</timestampFormat>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Enable CLM maven plugin -->
      <plugin>
        <groupId>com.sonatype.clm</groupId>
        <artifactId>clm-maven-plugin</artifactId>
        <configuration>
          <skip>${clm.skip}</skip>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>index</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>sonatype</id>
      <activation>
        <property>
          <name>!public</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-eclipse-batch</artifactId>
                <version>3.0.13-02</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <!-- the default behavior is to run the apply goal, which will apply linting to edited files -->
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>apply</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>public</id>
      <activation>
        <property>
          <name>public</name>
        </property>
      </activation>
    </profile>

    <!--
    When this profile is used it is intended to run tests that hit the real remotes
    Any ITs that hit a real remote should have <code>@Category(org.sonatype.goodies.testsupport.group.External)</code>
    annotation added so that they are only run when explicitly intended. This stops the tests from spamming the real
    remotes and potentially becoming blacklisted.
    -->
    <profile>
      <id>external-resources</id>
      <properties>
        <it.includedGroups>
          org.sonatype.goodies.testsupport.group.External
        </it.includedGroups>
        <it.excludedGroups>
          org.sonatype.goodies.testsupport.group.Unstable,
          org.sonatype.goodies.testsupport.group.Perf
        </it.excludedGroups>
      </properties>
    </profile>

    <!--
    This is to be used when running the nexuspro-performance-testsuite, adding the External referrence
    was just to override excludedGroups with something valid but not used.
    The performance tests should be invoked on the nexuspro-performance-testsuite module directly and not
    the whole testsuite
    -->
    <profile>
      <id>performance-tests</id>
      <properties>
        <it.excludedGroups>
          org.sonatype.goodies.testsupport.group.External,
          org.sonatype.goodies.testsupport.group.Unstable
        </it.excludedGroups>
      </properties>
    </profile>

    <!--
    This profile is used when running in-code performance tests , since we have orient-only performance tests and orient/postgres
    performance tests , this profile will ignore the orient-only ones ,allowing us to run valid tests when using newdb
     -->
    <profile>
      <id>newdb-synthetic-performance-tests</id>
      <properties>
        <it.includedGroups>
          org.sonatype.goodies.testsupport.group.Perf,
        </it.includedGroups>
        <it.excludedGroups>
          org.sonatype.goodies.testsupport.group.External,
          org.sonatype.goodies.testsupport.group.Unstable
        </it.excludedGroups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <showLogs>false</showLogs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
    This profile is used when running in-code performance tests , since the above one runs new-db supported performance tests,
    this one runs all the orient supported performance tests.
     -->
    <profile>
      <id>orient-synthetic-performance-tests</id>
      <properties>
        <it.includedGroups>
          org.sonatype.goodies.testsupport.group.Perf,
        </it.includedGroups>
        <it.excludedGroups>
          org.sonatype.goodies.testsupport.group.External,
          org.sonatype.goodies.testsupport.group.Unstable
        </it.excludedGroups>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <showLogs>false</showLogs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
    When this profile is used it is intended to run tests that are flaky / unstable
    Any ITs that fail often should be annotated with
    <code>@Category(org.sonatype.goodies.testsupport.group.Unstable)</code> until they can be worked on and improved.
    This makes it clear which tests are likely to fail regardless of your changes and also makes it easier to rerun
    only those tests which sometimes fail.
    -->
    <profile>
      <id>unstable-tests</id>
      <properties>
        <it.includedGroups>
          org.sonatype.goodies.testsupport.group.Unstable
        </it.includedGroups>
        <it.excludedGroups>
          org.sonatype.goodies.testsupport.group.Perf,
          org.sonatype.goodies.testsupport.group.External
        </it.excludedGroups>
      </properties>
    </profile>

    <profile>
      <id>orient-h2-unit-tests</id>
      <properties>
        <it.excludedGroups>
          org.sonatype.nexus.content.testsuite.groups.PostgresTestGroup,
          org.sonatype.goodies.testsupport.group.Unstable,
          org.sonatype.goodies.testsupport.group.Perf,
          org.sonatype.goodies.testsupport.group.External
        </it.excludedGroups>
      </properties>
    </profile>

    <profile>
      <id>postgres-unit-tests</id>
      <properties>
        <it.excludedGroups>
          org.sonatype.nexus.content.testsuite.groups.H2TestGroup,
          org.sonatype.nexus.content.testsuite.groups.OSSTestGroup,
          org.sonatype.goodies.testsupport.group.Unstable,
          org.sonatype.goodies.testsupport.group.Perf,
          org.sonatype.goodies.testsupport.group.External
        </it.excludedGroups>
      </properties>
    </profile>

    <profile>
      <id>h2-integration-tests</id>
      <properties>
        <it.excludedGroups>
          org.sonatype.nexus.content.testsuite.groups.PostgresTestGroup,
          org.sonatype.goodies.testsupport.group.Unstable,
          org.sonatype.goodies.testsupport.group.Perf,
          org.sonatype.goodies.testsupport.group.External
        </it.excludedGroups>
      </properties>
    </profile>

    <profile>
      <id>postgres-integration-tests</id>
      <properties>
        <it.excludedGroups>
          org.sonatype.nexus.content.testsuite.groups.H2TestGroup,
          org.sonatype.nexus.content.testsuite.groups.OSSTestGroup,
          org.sonatype.goodies.testsupport.group.Unstable,
          org.sonatype.goodies.testsupport.group.Perf,
          org.sonatype.goodies.testsupport.group.External
        </it.excludedGroups>
      </properties>
    </profile>

    <profile>
      <id>h2-external-resources</id>
      <properties>
        <it.includedGroups>
          org.sonatype.goodies.testsupport.group.External
        </it.includedGroups>
        <it.excludedGroups>
          org.sonatype.nexus.content.testsuite.groups.PostgresTestGroup,
          org.sonatype.goodies.testsupport.group.Unstable,
          org.sonatype.goodies.testsupport.group.Perf
        </it.excludedGroups>
      </properties>
    </profile>

    <profile>
      <id>postgres-external-resources</id>
      <properties>
        <it.includedGroups>
          org.sonatype.goodies.testsupport.group.External
        </it.includedGroups>
        <it.excludedGroups>
          org.sonatype.nexus.content.testsuite.groups.H2TestGroup,
          org.sonatype.nexus.content.testsuite.groups.OSSTestGroup,
          org.sonatype.goodies.testsupport.group.Unstable,
          org.sonatype.goodies.testsupport.group.Perf
        </it.excludedGroups>
      </properties>
    </profile>

    <!--
    Includes building of testsuite modules when the sources are present and tests aren't skipped.
    -->
    <profile>
      <id>include-testsuite</id>
      <activation>
        <file>
          <exists>testsuite/pom.xml</exists>
        </file>
        <!-- implicit AND... -->
        <property>
          <name>maven.test.skip</name>
          <value>!true</value>
        </property>
      </activation>
      <modules>
        <module>testsuite</module>
      </modules>
    </profile>

    <!--
    Includes building of private modules when the sources are present.
    -->
    <profile>
      <id>include-private</id>
      <activation>
        <file>
          <exists>private/pom.xml</exists>
        </file>
      </activation>
      <modules>
        <module>private</module>
      </modules>
    </profile>

    <!--
    Includes building of thirdparty bundles when the recipes are present.

    Deselect this profile when you don't want to continually rebuild them,
    or as a workaround to https://youtrack.jetbrains.com/issue/IDEA-126596
    (where IDEA adds red markers to code that refers to thirdparty classes
     because it can't see the shaded/rebundled content.)
    -->
    <profile>
      <id>include-thirdparty-bundles</id>
      <activation>
        <file>
          <exists>thirdparty-bundles/pom.xml</exists>
        </file>
      </activation>
      <modules>
        <module>thirdparty-bundles</module>
      </modules>
    </profile>

    <!--
    Enable running of integration-tests.
    -->
    <profile>
      <id>it</id>
      <activation>
        <property>
          <name>it</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
    Enable verbose logging for unit tests; defaults to DEBUG.
    -->
    <profile>
      <id>test.debug</id>
      <activation>
        <property>
          <name>test.debug</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <test.log.level>DEBUG</test.log.level>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-plugin</artifactId>
              <configuration>
                <systemPropertyVariables>
                  <test.log.level>${test.log.level}</test.log.level>
                </systemPropertyVariables>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <!--
    Enable verbose logging for integration tests; defaults to DEBUG.
    -->
    <profile>
      <id>it.debug</id>
      <activation>
        <property>
          <name>it.debug</name>
          <value>true</value>
        </property>
      </activation>
      <properties>
        <test.log.level>DEBUG</test.log.level>
        <it.test.log.level>DEBUG</it.test.log.level>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <configuration>
                <systemPropertyVariables>
                  <test.log.level>${test.log.level}</test.log.level>
                  <it.test.log.level>${it.test.log.level}</it.test.log.level>
                </systemPropertyVariables>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <!--
    Enable animal-sniffer to verify JDK compatibility.
    -->
    <profile>
      <id>animal-sniffer</id>
      <activation>
        <property>
          <name>sniff</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>animal-sniffer-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
    Disable optimization for "prod" aggregate sources.
    -->
    <profile>
      <id>disable-optimize</id>
      <properties>
        <extjs.omit>false</extjs.omit>
        <maven.yuicompressor.nominify>true</maven.yuicompressor.nominify>
        <maven.yuicompressor.nomunge>true</maven.yuicompressor.nomunge>
        <maven.yuicompressor.disableOptimizations>true</maven.yuicompressor.disableOptimizations>
        <maven.yuicompressor.linebreakpos>0</maven.yuicompressor.linebreakpos>
      </properties>
    </profile>

    <!--
    Execute jslint on javascript sources.
    -->
    <profile>
      <id>jslint</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>yuicompressor-maven-plugin</artifactId>
            <configuration>
              <sourceDirectory>${project.basedir}/src/main/resources/static/rapture</sourceDirectory>
              <jslintOptions>
                <!-- ignore whitespace rules -->
                <white>true</white>
                <!-- do not require 'use strict' -->
                <sloppy>true</sloppy>
                <!-- allow to do comments -->
                <todo>true</todo>
                <!-- allow subscript notation -->
                <sub>true</sub>
              </jslintOptions>
            </configuration>
            <executions>
              <execution>
                <id>plugin-jslint</id>
                <goals>
                  <goal>jslint</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
    Support for loading projects in Eclipse.
    -->
    <profile>
      <id>m2e</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.sonatype.plugins</groupId>
              <artifactId>yuicompressor-maven-plugin</artifactId>
              <configuration>
                <required>false</required>
              </configuration>
            </plugin>
            <plugin>
              <!-- Fix for java.lang.IllegalArgumentException: Problem constructing class org.ops4j.pax.exam.junit.PaxExam runner for class -->
              <groupId>org.apache.servicemix.tooling</groupId>
              <artifactId>depends-maven-plugin</artifactId>
              <configuration>
                <outputFile>${project.build.directory}/test-classes/META-INF/maven/dependencies.properties</outputFile>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.eclipse.m2e</groupId>
              <artifactId>lifecycle-mapping</artifactId>
              <version>1.0.0</version>
              <configuration>
                <lifecycleMappingMetadata>
                  <pluginExecutions>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <versionRange>[2.5.1,)</versionRange>
                        <goals>
                          <goal>copy</goal>
                          <goal>unpack</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore/>
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-plugin-plugin</artifactId>
                        <versionRange>[3.2,)</versionRange>
                        <goals>
                          <goal>descriptor</goal>
                          <goal>helpmojo</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore/>
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <versionRange>[1.7,)</versionRange>
                        <goals>
                          <goal>run</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore/>
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.karaf.tooling</groupId>
                        <artifactId>karaf-maven-plugin</artifactId>
                        <versionRange>[3.0.0,)</versionRange>
                        <goals>
                          <goal>features-generate-descriptor</goal>
                          <goal>install-kars</goal>
                          <goal>assembly</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore/>
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <versionRange>[1.13.1,)</versionRange>
                        <goals>
                          <goal>execute</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore/>
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.servicemix.tooling</groupId>
                        <artifactId>depends-maven-plugin</artifactId>
                        <versionRange>[1.2,)</versionRange>
                        <goals>
                          <goal>generate-depends-file</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <execute/>
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.sonatype.nexus.buildsupport</groupId>
                        <artifactId>extjs-maven-plugin</artifactId>
                        <versionRange>[3.0.0-03,)</versionRange>
                        <goals>
                          <goal>aggregate-js</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <execute/>
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <versionRange>[1.7.5,)</versionRange>
                        <goals>
                          <goal>npm</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore/>
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.eclipse.sisu</groupId>
                        <artifactId>sisu-maven-plugin</artifactId>
                        <versionRange>[0.3.4,)</versionRange>
                        <goals>
                          <goal>main-index</goal>
                          <goal>test-index</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <execute/>
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.karaf.tooling</groupId>
                        <artifactId>karaf-maven-plugin</artifactId>
                        <versionRange>[4.2.6,)</versionRange>
                        <goals>
                          <goal>verify</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore/>
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <versionRange>[0.7,)</versionRange>
                        <goals>
                          <goal>install-node-and-yarn</goal>
                          <goal>yarn</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore/>
                      </action>
                    </pluginExecution>
                  </pluginExecutions>
                </lifecycleMappingMetadata>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <!-- Make the npm test executions aware of the skipTests property -->
      <id>skipNpmTests-skipTests</id>
      <activation>
        <property>
          <name>skipTests</name>
        </property>
      </activation>
      <properties>
        <npm.skipTests>true</npm.skipTests>
      </properties>
    </profile>

    <profile>
      <!-- Make the npm test executions aware of the maven.test.skip property -->
      <id>skipNpmTests-maven.test.skip</id>
      <activation>
        <property>
          <name>maven.test.skip</name>
        </property>
      </activation>
      <properties>
        <npm.skipTests>true</npm.skipTests>
      </properties>
    </profile>

    <profile>
      <id>ci</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <configuration>
              <!-- when the CI profile is activated, we have to skip the apply goal -->
              <applySkip>true</applySkip>
            </configuration>
            <!-- when the ci profile is activated, we bind the check goal to the compile phase to validate linting -->
            <executions>
              <execution>
                <phase>compile</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
