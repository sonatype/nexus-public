<?xml version="1.0" encoding="UTF-8"?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2008-present Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.nexus.assemblies</groupId>
    <artifactId>nexus-assemblies</artifactId>
    <version>3.77.0-08</version>
  </parent>

  <artifactId>nexus-base-template</artifactId>
  <name>${project.groupId}:${project.artifactId}</name>
  <packaging>pom</packaging>

  <dependencies>

    <dependency>
      <groupId>org.sonatype.nexus.assemblies</groupId>
      <artifactId>nexus-base-overlay</artifactId>
      <type>zip</type>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!--
    Custom launcher for Nexus
    -->
    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-main</artifactId>
      <scope>provided</scope>
    </dependency>

    <!--
    Our preferred OSGi runtime
    -->
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.framework</artifactId>
      <scope>provided</scope>
    </dependency>

    <!--
    Framework/startup features (compile-scope)
    -->
    <dependency>
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>framework</artifactId>
      <type>kar</type>
    </dependency>

    <dependency>
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>standard</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus.assemblies</groupId>
      <artifactId>nexus-startup-feature</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>

    <!-- override to exclude sshd-osgi from dependency list -->
    <dependency>
      <groupId>org.apache.karaf</groupId>
      <artifactId>org.apache.karaf.client</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- override to exclude sshd-osgi from dependency list -->
    <dependency>
      <groupId>org.apache.karaf.shell</groupId>
      <artifactId>org.apache.karaf.shell.core</artifactId>
      <scope>provided</scope>
    </dependency>

    <!--
    Installed/boot features (runtime-scope)
    -->
    <dependency>
      <groupId>org.sonatype.nexus.assemblies</groupId>
      <artifactId>nexus-boot-feature</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus.assemblies</groupId>
      <artifactId>nexus-base-feature</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-open-core-edition</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus.assemblies</groupId>
      <artifactId>nexus-core-feature</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-datastore-mybatis</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <id>pax-url-settings</id>
            <phase>initialize</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <scripts>
                <script>
                  // workaround https://issues.apache.org/jira/browse/KARAF-4288
                  def settingsFile = session.request.userSettingsFile
                  if (settingsFile?.isFile()) {
                    // pass custom settings file to pax-url as karaf-maven-plugin may need it to fetch content
                    System.setProperty('org.ops4j.pax.url.mvn.settings', session.request.userSettingsFile.path)
                  }
                </script>
              </scripts>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.karaf.tooling</groupId>
        <artifactId>karaf-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>karaf-assembly</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>assembly</goal>
            </goals>
            <configuration>
              <!-- disable archive generation, will use maven-assembly-plugin -->
              <archiveTarGz>false</archiveTarGz>
              <archiveZip>false</archiveZip>
              <!-- disable include of target/classes, we use overlay instead -->
              <includeBuildOutputDirectory>false</includeBuildOutputDirectory>
              <!-- override expected osgi.ee to match compilation target -->
              <javase>${maven.compiler.release}</javase>
              <!-- install startup jars 'by-reference' which avoids copying -->
              <useReferenceUrls>true</useReferenceUrls>
              <startupFeatures>
                <feature>wrap</feature>
                <feature>bundle</feature>
                <feature>config</feature>
                <feature>deployer</feature>
                <feature>diagnostic</feature>
                <feature>feature</feature>
                <feature>jaas</feature>
                <feature>kar</feature>
                <feature>log</feature>
                <feature>package</feature>
                <feature>scr</feature>
                <feature>shell</feature>
                <feature>service</feature>
                <feature>system</feature>
                <feature>nexus-startup-feature</feature>
              </startupFeatures>
              <bootFeatures>
                <feature>nexus-boot-feature</feature>
              </bootFeatures>
              <installedFeatures>
                <feature>management</feature>
                <!--
                To enable remote access to the karaf console, uncomment the ssh feature and add ssh to featuresBoot in
                org.apache.karaf.features.cfg e.g. featuresBoot = nexus-boot-feature,ssh
                Note: Enabling remote access is not recommended or supported.
                -->
                <!-- <feature>ssh</feature> -->
                <feature>nexus-datastore-mybatis</feature>
                <feature>nexus-core-feature</feature>
                <feature>nexus-open-core-edition</feature>
              </installedFeatures>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>overlay-assembly</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <!-- delete some cruft which karaf includes by default -->
                <delete includeemptydirs="true">
                  <fileset dir="${project.build.directory}/assembly">
                    <include name="bin/*"/>
                    <include name="**/README"/>
                    <include name="etc/all.policy"/>
                    <include name="etc/distribution.info"/>
                    <include name="etc/equinox-debug.properties"/>
                    <include name="etc/regions-config.xml"/>
                    <include name="etc/org.apache.felix.eventadmin.impl.EventAdmin"/>
                    <include name="etc/org.apache.karaf.features.obr.cfg"/>
                    <include name="etc/org.apache.karaf.features.repos.cfg"/>
                    <include name="etc/org.apache.karaf.command.acl.*.cfg"/>
                    <include name="etc/jmx.acl.*.cfg"/>
                    <include name="etc/users.properties"/>
                    <include name="etc/keys.properties"/>
                    <include name="lib/endorsed/*java.xml.ws*"/>
                    <include name="lib/ext/**"/>
                    <include name="lib/jdk9plus/**"/>
                  </fileset>
                </delete>

                <!-- identify the specific pax-logging API bundle used by nexus-pax-logging backend -->
                <loadresource property="pax-logging-api">
                  <string>${org.ops4j.pax.logging:pax-logging-api:jar}</string>
                  <filterchain>
                    <replacestring from="${file.separator}" to="/"/>
                    <replaceregex pattern=".*(pax-logging-api/[^/]*)/.*" replace="\1"/>
                  </filterchain>
                </loadresource>

                <!-- remove the other bundles, leaving only the selected API bundle for our backend -->
                <replaceregexp file="${project.build.directory}/assembly/etc/startup.properties" flags="g"
                               match=".*org/ops4j/pax/logging/(?!${pax-logging-api}).*\s*" replace=""/>
                <delete includeemptydirs="true">
                  <fileset dir="${project.build.directory}/assembly/system/org/ops4j/pax/logging"
                           excludes="${pax-logging-api}/**"/>
                </delete>

                <!-- make sure only 'nexus-boot-feature' is listed under 'featuresBoot' -->
                <replaceregexp file="${project.build.directory}/assembly/etc/org.apache.karaf.features.cfg" flags="s"
                               match="featuresBoot.*?[^\\](?=\v)" replace="featuresBoot = nexus-boot-feature"/>

                <!-- tweak generated karaf feature configuration -->
                <concat destfile="${project.build.directory}/assembly/etc/org.apache.karaf.features.cfg" append="true">
                  <string>${line.separator}</string>
                  <string>
                    # SONATYPE: disable .cfg store on feature install
                    configCfgStore=false

                    # SONATYPE: disable automatic updates and retries
                    serviceRequirements=disable
                    updateSnapshots=false
                    scheduleMaxRun=1
                  </string>
                  <filterchain>
                    <trim/>
                  </filterchain>
                </concat>

                <!-- move karaf config to etc/karaf -->
                <move todir="${project.build.directory}/assembly/etc/karaf">
                  <fileset dir="${project.build.directory}/assembly/etc"/>
                </move>

                <!-- overlay customizations -->
                <unzip src="${org.sonatype.nexus.assemblies:nexus-base-overlay:zip}"
                       dest="${project.build.directory}/assembly"
                       overwrite="true">
                  <cutdirsmapper dirs="1"/>
                </unzip>

                <!-- workaround maven-assembly-plugin bug where lineEnding configuration for fileSets is ineffective -->
                <fixcrlf srcdir="${project.build.directory}/assembly/bin" includes="*" excludes="*.bat" eol="unix"/>
                <fixcrlf srcdir="${project.build.directory}/assembly/bin" includes="*.bat" eol="dos"/>

              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>archive-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>${project.basedir}/src/main/assembly/bundle.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
