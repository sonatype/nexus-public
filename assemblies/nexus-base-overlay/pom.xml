<?xml version="1.0" encoding="UTF-8"?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2008-present Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.nexus.assemblies</groupId>
    <artifactId>nexus-assemblies</artifactId>
    <version>3.77.0-08</version>
  </parent>

  <artifactId>nexus-base-overlay</artifactId>
  <name>${project.groupId}:${project.artifactId}</name>
  <packaging>pom</packaging>

  <dependencies>
    <!--
    Custom launcher for Nexus
    -->
    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-main</artifactId>
      <scope>provided</scope>
    </dependency>

    <!--
    Our preferred OSGi runtime
    -->
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.framework</artifactId>
      <scope>provided</scope>
    </dependency>

    <!--
    Framework/startup features (compile-scope)
    -->
    <dependency>
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>framework</artifactId>
      <type>kar</type>
    </dependency>

    <dependency>
      <groupId>org.apache.karaf.features</groupId>
      <artifactId>standard</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus.assemblies</groupId>
      <artifactId>nexus-startup-feature</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>

    <!--
    Installed/boot features (runtime-scope)
    -->
    <dependency>
      <groupId>org.sonatype.nexus.assemblies</groupId>
      <artifactId>nexus-boot-feature</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus.assemblies</groupId>
      <artifactId>nexus-base-feature</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-open-core-edition</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus.assemblies</groupId>
      <artifactId>nexus-core-feature</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.sonatype.nexus</groupId>
      <artifactId>nexus-datastore-mybatis</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
      <scope>runtime</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <id>pax-url-settings</id>
            <phase>initialize</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <scripts>
                <script>
                  // workaround https://issues.apache.org/jira/browse/KARAF-4288
                  def settingsFile = session.request.userSettingsFile
                  if (settingsFile?.isFile()) {
                    // pass custom settings file to pax-url as karaf-maven-plugin may need it to fetch content
                    System.setProperty('org.ops4j.pax.url.mvn.settings', session.request.userSettingsFile.path)
                  }
                </script>
              </scripts>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>overlay-assembly</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <!-- install additional boot jars -->
                <copy file="${org.sonatype.nexus:nexus-main:jar}"
                      tofile="${project.build.directory}/assembly/lib/boot/nexus-main.jar"/>
                <copy file="${javax.activation:activation:jar}"
                      todir="${project.build.directory}/assembly/lib/boot"/>
                <copy file="${jakarta.xml.bind:jakarta.xml.bind-api:jar}"
                      todir="${project.build.directory}/assembly/lib/boot"/>
                <copy file="${org.glassfish.jaxb:jaxb-runtime:jar}"
                      todir="${project.build.directory}/assembly/lib/boot"/>
                <copy file="${org.glassfish.jaxb:txw2:jar}"
                      todir="${project.build.directory}/assembly/lib/boot"/>
                <copy file="${com.sun.istack:istack-commons-runtime:jar}"
                      todir="${project.build.directory}/assembly/lib/boot"/>

                <!-- install additional framework jars -->
                <copy file="${javax.annotation:javax.annotation-api:jar}"
                      todir="${project.build.directory}/assembly/lib"/>
                <copy file="${com.google.errorprone:error_prone_annotations:jar}"
                      todir="${project.build.directory}/assembly/lib"/>
                <copy file="${com.google.code.findbugs:jsr305:jar}"
                      todir="${project.build.directory}/assembly/lib"/>
                <copy file="${org.bouncycastle:bcprov-jdk15to18:jar}"
                      todir="${project.build.directory}/assembly/lib"/>
                <copy file="${org.bouncycastle:bcpkix-jdk15to18:jar}"
                      todir="${project.build.directory}/assembly/lib"/>
                <copy file="${org.bouncycastle:bcpg-jdk15to18:jar}"
                      todir="${project.build.directory}/assembly/lib"/>
                <copy file="${org.bouncycastle:bcutil-jdk15to18:jar}"
                      todir="${project.build.directory}/assembly/lib"/>

                <!-- identify the specific pax-logging API bundle used by nexus-pax-logging backend -->
                <loadresource property="pax-logging-api">
                  <string>${org.ops4j.pax.logging:pax-logging-api:jar}</string>
                  <filterchain>
                    <replacestring from="${file.separator}" to="/"/>
                    <replaceregex pattern=".*(pax-logging-api/[^/]*)/.*" replace="\1"/>
                  </filterchain>
                </loadresource>

                <!-- overlay customizations -->
                <copy todir="${project.build.directory}/assembly" overwrite="true">
                  <fileset dir="${project.basedir}/src/main/resources/overlay"/>
                </copy>

                <!-- sonatype-work placeholders/templates -->
                <copy todir="${project.build.directory}/sonatype-work" overwrite="true">
                  <fileset dir="${project.basedir}/src/main/resources/sonatype-work"/>
                </copy>

                <!-- workaround maven-assembly-plugin bug where lineEnding configuration for fileSets is ineffective -->
                <fixcrlf srcdir="${project.build.directory}/assembly/bin" includes="*" excludes="*.bat" eol="unix"/>
                <fixcrlf srcdir="${project.build.directory}/assembly/bin" includes="*.bat" eol="dos"/>

              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>archive-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>${project.basedir}/src/main/assembly/bundle.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
